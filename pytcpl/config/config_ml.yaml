# Binary classification

aeid: 784 # Assay id

activity_threshold: 0.9 # Activity threshold on continuous hitcall for binary classification

random_state: 42 # For reproducibility (observed high variance)

train_test_split_ratio: 0.2

grid_search_cv:
  scoring: f1_micro # recall_macro, specificity, f1, roc_auc, accuracy
  # The F1 score is the harmonic mean of the precision and recall. It thus symmetrically represents both precision and recall in one metric. The more generic F_beta score applies additional weights, valuing one of precision or recall more than the other.
  beta: 1 # F-beta = (1 + beta^2) * (precision * recall) / ((beta^2 * precision) + recall),  1 = F1, Two commonly used values for beta are 2, which weighs recall higher than precision, and 0.5, which weighs recall lower than precision.
  n_jobs: -1
  verbose: 1 # 0-3

ignore_warnings: True


apply:
  smote: 0

# Don't forget to import all the classifiers
# and transformers you want to use
classifiers:
  # - name: SVC
  #   steps:
  #     - name: SVC

  # - name: KNeighborsClassifier
  #   steps:
  #     - name: PCA
  #     - name: KNeighborsClassifier
      
  # - name:  GaussianNB
  #   steps:
  #     - name: PCA
  #     - name: GaussianNB

  # - name: AdaBoostClassifier
  #   steps:
  #     # - name: PCA
  #     - name: AdaBoostClassifier
  
  # - name: RandomForestClassifier
  #   steps:
  #     # - name: PCA
  #     - name: RandomForestClassifier
  #       args:
  #         n_estimators: [100, 150] # default = 100

  - name: XGBClassifier
    steps:
      # - name: PCA
      - name: XGBClassifier
        # args:
        #   n_estimators: [100, 150] # default = 100
  
  # - name: MLPClassifier
  #   steps:
  #     - name: PCA # Todo: do explicit feature selection, guidance from poistive cases
  #     - name: MLPClassifier

# get feature importance and remove no variance features 
# and highly correlated features prio 1.

# Todo: compare with other assay, which chemicals are easy/difficult to predict


# put assay endpoint together with same mechanistic target

# also try edge case assay and try to tune 